/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cloudarts.pitbulltestbench;

import de.cloudarts.aibattleai.AIPitbull1;
import de.cloudarts.aibattleai.AITools;

/**
 *
 * @author wojciech
 */
public class PBTBMainForm extends javax.swing.JFrame {
    
    int[] _grid;
    int _currentPlayer = 1;

    /**
     * Creates new form PBTBMainForm
     */
    public PBTBMainForm() {
        initComponents();
        _grid = new int[de.cloudarts.aibattleai.AITools.GRID_COLUMNS*de.cloudarts.aibattleai.AITools.GRID_ROWS];
        gridPanel1.grid = _grid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gridPanel1 = new de.cloudarts.pitbulltestbench.GridPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gridPanel1.setPreferredSize(new java.awt.Dimension(230, 230));
        gridPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout gridPanel1Layout = new javax.swing.GroupLayout(gridPanel1);
        gridPanel1.setLayout(gridPanel1Layout);
        gridPanel1Layout.setHorizontalGroup(
            gridPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        gridPanel1Layout.setVerticalGroup(
            gridPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );

        jButton1.setText("reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("compute");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gridPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gridPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridPanel1MouseClicked
        
        int intervalX = gridPanel1.getWidth()/7;
        int columnClicked = (int)evt.getPoint().x/intervalX;
        
        //next free row for this column
        int nextFreeIndex = AITools.coordsToIndex(columnClicked, AITools.GRID_ROWS-1);
        while( _grid[nextFreeIndex] != 0  )
        {
                nextFreeIndex = AITools.getGridIndexOnTopOf(nextFreeIndex);
                if( nextFreeIndex < 0)	//can't throw in this row. no possible situation
                {
                        break;
                }
        }
        if( nextFreeIndex < 0)	//can't throw in this row. no possible situation
        {
                return;
        }
        
        _grid[nextFreeIndex] = _currentPlayer;
        _currentPlayer = _currentPlayer == 1 ? 2 : 1;
        gridPanel1.repaint();
    }//GEN-LAST:event_gridPanel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for( int i = 0; i < _grid.length; i++ )
        {
            _grid[i] = 0;
        }
        
        _currentPlayer = 1;
        
        gridPanel1.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AIPitbull1 ai = new AIPitbull1();
        String action = ai.getNextAction(_grid, _currentPlayer);
        int column = AITools.actionToColumn(action);
        //next free row for this column
        int nextFreeIndex = AITools.coordsToIndex(column, AITools.GRID_ROWS-1);
        while( _grid[nextFreeIndex] != 0  )
        {
                nextFreeIndex = AITools.getGridIndexOnTopOf(nextFreeIndex);
                if( nextFreeIndex < 0)	//can't throw in this row. no possible situation
                {
                        break;
                }
        }
        if( nextFreeIndex < 0)	//can't throw in this row. no possible situation
        {
                return;
        }
        
        _grid[nextFreeIndex] = _currentPlayer;
        
        _currentPlayer = _currentPlayer == 1 ? 2 : 1;
        gridPanel1.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PBTBMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PBTBMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PBTBMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PBTBMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PBTBMainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cloudarts.pitbulltestbench.GridPanel gridPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
